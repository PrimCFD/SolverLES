name: Tests · CPU/GPU/MPI (optimized)

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # One-time per workflow run: prefetch deps to speed up all matrix jobs
  prefetch-deps:
    name: Prefetch third‑party archives
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install minimal build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends cmake ninja-build build-essential gfortran
      - name: Prefetch third‑party sources into extern/
        run: |
          bash scripts/prefetch_third_party.sh
      - name: Upload extern/ cache for downstream jobs
        uses: actions/upload-artifact@v4
        with:
          name: extern-cache
          path: extern/
          if-no-files-found: error
          retention-days: 7

  # Matrix of test types / environments
  tests:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false
    name: ${{ matrix.name }}
    needs: prefetch-deps
    runs-on: ${{ matrix.runs_on }}
    timeout-minutes: 60
    continue-on-error: ${{ matrix.allow_fail || false }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Unit (CPU)
            test: unit
            runs_on: [self-hosted, linux, x64]
            apt_deps: true
            gpu: false
            mpi: false

          - name: Perf (CPU)
            test: perf
            runs_on: [self-hosted, linux, x64]
            apt_deps: true
            gpu: false
            mpi: false

          - name: MPI (emulated)
            test: mpi
            runs_on: [self-hosted, linux, x64]
            apt_deps: true
            gpu: false
            mpi: true
            mpi_mode: emulate
            np: 2

          - name: Perf (GPU)
            test: perf
            runs_on: [self-hosted, linux, x64]
            apt_deps: false
            gpu: true
            mpi: false
            allow_fail: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build/MPI deps (Ubuntu)
        if: ${{ matrix.apt_deps }}
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            cmake ninja-build build-essential gfortran \
            openmpi-bin libopenmpi-dev

      - name: Fetch extern/ from prefetch job
        uses: actions/download-artifact@v4
        with:
          name: extern-cache
          path: extern/

      - name: Ensure extern/ exists (fallback safety)
        shell: bash
        run: |
          if [ ! -d extern ] || [ -z "$(ls -A extern)" ]; then
            echo "extern/ missing, running prefetch_third_party.sh here as a fallback…"
            bash scripts/prefetch_third_party.sh
          fi
          ls -l extern || true

      - name: CPU Unit tests
        if: ${{ matrix.test == 'unit' }}
        env:
          OFFLINE: "1"
        run: |
          ./scripts/run_unit_tests.sh

      - name: CPU Perf tests
        if: ${{ matrix.test == 'perf' && !matrix.gpu }}
        env:
          OFFLINE: "1"
          ENABLE_CUDA: "OFF"   # keep CPU-only path explicit
          CMAKE_BUILD_TYPE: Release
        run: |
          ./scripts/run_perf_tests.sh

      - name: MPI tests (emulated on CI)
        if: ${{ matrix.test == 'mpi' }}
        env:
          OFFLINE: "1"
        run: |
          ./scripts/run_mpi_tests.sh --mode ${{ matrix.mpi_mode || 'auto' }} --np ${{ matrix.np || 2 }} --keep-going

      - name: GPU Perf tests
        if: ${{ matrix.test == 'perf' && matrix.gpu }}
        env:
          OFFLINE: "1"
          CMAKE_BUILD_TYPE: Release
        run: |
          nvidia-smi || true
          nvcc --version || true
          ./scripts/run_perf_tests.sh

      - name: Upload test reports (JUnit XML)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.name }} · reports
          path: |
            build-unit/test-reports/unit/**
            build-perf/test-reports/perf/**
            build-mpi/test-reports/mpi/**
          if-no-files-found: ignore
          retention-days: 7
