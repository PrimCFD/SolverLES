#=======================
# SolverLES config (v0)
#=======================


# Short identifier for outputs (writer will create path/<case>.h5, path/<case>.xmf, etc.)
case: cavity_64 # default: "case"


# Mesh (local box on each rank, ghosts are uniform)
mesh:
  local: [64, 64, 64] # required (ints)
  ng: 2 # required (uniform ghost width)
  periodic: [false, false, false] # optional (reserved)


# Time integration and writer cadence
time:
  dt: 1.0e-3 # required (seconds)
  t_end: 1.0 # required (seconds)
  write_every: # choose one; if both set, 'steps' wins
    steps: 10 # write every N steps
    # time: 0.05 # OR every T seconds (converted with ceil(T/dt))


# I/O policy & backend
io:
  backend: xdmf # xdmf | cgns | null
  path: out # output directory
  precision: native # native | float64 | float32 (packing override)
  async: # optional background writer
    enabled: true
    max_queue: 8 # 0 = unbounded
    drop_on_overflow: true # drop writes when queue is full (protects cadence)
  preflight: # optional resource checks (RAM/disk)
    enabled: true
    ram_bytes: auto # auto | integer bytes (e.g., "17179869184")
    disk_bytes: auto # auto | integer bytes


# Runtime-loaded physics libraries (in this order)
plugins:
- lib: libphysics_fluids.so
# - lib: libphysics_heat.so


# Program selector + free-form KV passed to plugin (strings on both sides)
program:
  key: rk3
  params:
    cfl: "0.7"
    # any other plugin-defined keys â†’ strings


# Field output selection by name (the app allocates/registers these as doubles for now)
fields:
  output: [rho]